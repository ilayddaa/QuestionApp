import React, { useEffect, useState } from 'react'; // React k√ºt√ºphanesini i√ße aktarƒ±yoruz

// QuestionScreen bile≈üeni, bir sorunun ekranƒ±nƒ± temsil eder. Bu bile≈üen, soruyu, cevap se√ßeneklerini ve kalan s√ºreyi g√∂sterir.
const QuestionScreen = ({ question, onAnswer, questionIndex, total }) => {
    const [timeLeft, setTimeLeft] = useState(30); // Ba≈ülangƒ±√ßta 30 saniye s√ºre var
    const [showOptions, setShowOptions] = useState(false); // Ba≈ülangƒ±√ßta se√ßenekler gizli
    const [selected, setSelected] = useState(null); // Ba≈ülangƒ±√ßta hi√ßbir se√ßenek se√ßilmemi≈ü

    // useEffect, bile≈üen y√ºklendiƒüinde ve question deƒüi≈ütiƒüinde √ßalƒ±≈üƒ±r.
    useEffect(() => {
        setTimeLeft(30); // S√ºreyi 30 saniyeye sƒ±fƒ±rla
        setShowOptions(false); // Se√ßenekleri gizle
        setSelected(null); // Se√ßimi sƒ±fƒ±rla

        // 4 saniye sonra se√ßenekleri g√∂ster
        const timer = setInterval(() => {
            setTimeLeft((prev) => prev - 1); // Kalan s√ºreyi bir azalt
        }, 4000);

        const showOptionsTimeout = setTimeout(() => setShowOptions(true), 1000); // Se√ßenekleri 1 saniye sonra g√∂ster

        // 30 saniye sonra otomatik olarak cevap ver
        const autoNextTimeout = setTimeout(() => {
            if (!selected) onAnswer(null);
        }, 30000);

        // Temizleme fonksiyonu, bile≈üen unmount edildiƒüinde veya question deƒüi≈ütiƒüinde √ßalƒ±≈üƒ±r.
        return () => {
            clearInterval(timer); // Zamanlayƒ±cƒ±yƒ± temizle
            clearTimeout(showOptionsTimeout); // Se√ßenek g√∂sterme zamanlayƒ±cƒ±sƒ±nƒ± temizle
            clearTimeout(autoNextTimeout); // Otomatik ge√ßi≈ü zamanlayƒ±cƒ±sƒ±nƒ± temizle
        };
    }, [question]);

    // handleClick fonksiyonu, bir se√ßenek tƒ±klandƒ±ƒüƒ±nda √ßalƒ±≈üƒ±r. Eƒüer zaten bir se√ßenek se√ßilmi≈üse hi√ßbir ≈üey yapmaz.
    const handleClick = (option) => {
        if (selected) return;
        setSelected(option);
        setTimeout(() => onAnswer(option), 500);
    };

    return (
        <div className="min-h-screen  text-white flex flex-col items-center justify-start px-6 py-10">
            <h2 className="text-2xl font-extrabold mb-6 text-white tracking-wide animate-pulse">
                üß† Soru {questionIndex} / {total}
            </h2>

            <img
                src={question.media}
                alt="soru"
                className="rounded-xl shadow-xl w-full max-w-[700px] h-[350px] object-cover mb-6 border-4 border-pink-500"
            />

            <p className="text-xl font-semibold text-center mb-6 max-w-[800px] leading-relaxed">
                {question.question}
            </p>

            <p className="text-lg font-bold text-yellow-300 mb-6 animate-pulse">
                ‚è≥ Kalan S√ºre: {timeLeft} saniye
            </p>

            {showOptions ? (
                <div className="grid grid-cols-1 sm:grid-cols-2 gap-4 w-full max-w-[600px]">
                    {question.options.map((opt) => (
                        <button
                            key={opt} // Her se√ßenek i√ßin benzersiz bir anahtar
                            onClick={() => handleClick(opt)} // Se√ßenek tƒ±klandƒ±ƒüƒ±nda handleClick fonksiyonunu √ßaƒüƒ±r
                            className={`px-6 py-3 rounded-xl text-lg font-semibold border-2 transition duration-300 shadow-lg ${selected === opt // Se√ßenek se√ßilmi≈üse. Semibold: Kalƒ±n yazƒ± tipi 
                                ? 'bg-pink-600 text-white scale-105' // Se√ßenek se√ßildiƒüinde. Scale: B√ºy√ºtme efekti
                                : 'bg-white text-black hover:bg-pink-100 hover:text-black' // Se√ßenek se√ßilmediƒüinde
                                }`} // ? soru i≈üareti burada ternary operat√∂r√ºn√º temsil eder. Ternary operat√∂r√º, bir ko≈üula baƒülƒ± olarak iki farklƒ± deƒüeri d√∂nd√ºr√ºr.
                        >
                            {opt}
                        </button>
                    ))}
                </div>
            ) : (
                <p className="italic text-pink-300 text-lg">≈ûƒ±klar birazdan g√∂r√ºnecek...</p>
            )}
        </div>
    );
}

export default QuestionScreen;